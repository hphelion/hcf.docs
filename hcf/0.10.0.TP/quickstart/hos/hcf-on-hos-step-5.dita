<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="concept_cw2_thz_st">
 <title>Quick Start Step 5: <keyword keyref="quickStartHOSstep5"/></title>
 <shortdesc>The following examples describe a typical process of pushing an application using the
      <codeph>cf</codeph> CLI to a Droplet Execution Agent (DEA) running on <keyword
      keyref="prodLong"/>.</shortdesc>
 <prolog>
  <metadata>
   <othermeta name="author" content="Michael Khmelnitsky"/>
  </metadata>
 </prolog>
 <conbody>
    <note type="tip">For detailed instructions on using the <codeph>cf push</codeph> command and
      deploying applications, see the Cloud Foundry documentation on <xref
        href="http://docs.cloudfoundry.org/devguide/deploy-apps/deploy-app.html" format="html"
        scope="external">deploying an application</xref> and on the <xref
        href="https://docs.cloudfoundry.org/concepts/architecture/execution-agent.html"
        format="html" scope="external">Droplet Execution Agent</xref>.</note>
  <simpletable id="simpletable_cmb_xvk_g5">
   <strow>
     <stentry>1. <xref conref="hcf-on-hos-step-2.dita#concept_ikh_xgz_st/quickStartHOSstep1_"/><p>2.
       <xref conref="hcf-on-hos-step-1.dita#concept_s2k_b35_st/quickStartHOSstep2_"/></p><p>3. <xref
         conref="hcf-on-hos-step-1.dita#concept_s2k_b35_st/quickStartHOSstep3_"/></p><p>4. <xref
           conref="hcf-on-hos-step-1.dita#concept_s2k_b35_st/quickStartHOSstep4_"/></p><p>5. <b><keyword
        keyref="quickStartHOSstep5" id="quickStartHOSstep5"/></b></p>6. <xref
          conref="hcf-on-hos-step-1.dita#concept_s2k_b35_st/quickStartHOSstep6_"/></stentry>
     <stentry><b>Sample Applications</b><p>The following sample applications will get your started
            with the <codeph>cf push</codeph> workflow:</p><p id="sample-apps">
            <table frame="all" rowsep="1" colsep="1">
              <tgroup cols="2">
                <colspec colname="c1" colnum="1" colwidth="1.0*"/>
                <colspec colname="c2" colnum="2" colwidth="1.0*"/>
                <thead>
                  <row>
                    <entry>Cloud Foundry Applications</entry>
                    <entry>Helion Development Platform Applications</entry>
                  </row>
                </thead>
                <tbody>
                  <row>
                    <entry>You can push a variety of Cloud Foundry-native application written in
                      different programming languages to <keyword keyref="prodShort"/>.<p>The
                        official Cloud Foundry sample applications are <xref
                          href="https://github.com/cloudfoundry-samples" format="html"
                          scope="external">available on GitHub</xref>.</p></entry>
                    <entry>You can also push Helion Development Platform applications to <keyword
                        keyref="prodShort"/>. <p>The following applications output environment
                          variables:<ul id="ul_bmz_1js_35">
                          <li><xref href="https://github.com/HelionDevPlatform/go-env" format="html"
                              scope="external">go-env</xref> (Go)</li>
                          <li><xref href="https://github.com/HelionDevPlatform/node-env"
                              format="html" scope="external">node-env</xref> (Node.js)</li>
                          <li><xref href="https://github.com/HelionDevPlatform/phpinfo"
                              format="html" scope="external">phpinfo</xref> (PHP)</li>
                        </ul></p><p>The following starter applications demonstrate application
                          design:<note>Use the <codeph>HCF</codeph> branches of these
                          applications:<codeblock>git clone -b HCF git@github.com:HelionDevPlatform/<varname>&lt;myApp></varname>.git</codeblock></note></p><ul
                        id="ul_bfs_xzn_35">
                        <li><xref href="https://github.com/HelionDevPlatform/java-starter-app"
                            format="html" scope="external">java-starter-app</xref> (Java)</li>
                        <li><xref href="https://github.com/HelionDevPlatform/python-starter-app"
                            format="html" scope="external">python-starter-app</xref> (Python)</li>
                        <li><xref href="https://github.com/HelionDevPlatform/ruby-starter-app"
                            format="html" scope="external">ruby-starter-app</xref> (Ruby)</li>
                      </ul></entry>
                  </row>
                </tbody>
              </tgroup>
            </table>
          </p><b>To Prepare for Pushing Your First Application</b><ol id="ol_zdy_p53_tt">
            <li id="prepare-push-target">Ensure that you are targeting the desired cluster, for
                example:<codeblock id="target_cluster">cf api https://api.203.0.113.0.xip.io</codeblock><note>To
                skip SSL validation, add the <codeph>--skip-ssl-validation</codeph> option to your
                command. If you cannot connect to your cluster, ensure that your connection has no
                proxy settings.</note></li>
            <li id="prepare-push-login">Ensure that you are logged into the desired
                cluster:<codeblock>cf login</codeblock><p id="user_pass">When prompted, enter your
                username (email) and password.</p></li>
            <li>If you are behind a proxy, set the proxy environment for your applications, for
                example:<note type="important" id="proxy-warning">If you configure your proxy
                servers in the <codeph>10.x.x.x</codeph> network, the application staging process
                will fail. This network range is reserved for Warden
              containers.</note><codeblock>cf set-staging-environment-variable-group '{
"http_proxy":"http://proxy.example.com:8080",
"https_proxy":"http://proxy.example.com:8080",
"HTTP_PROXY":"http://proxy.example.com:8080",
"HTTPS_PROXY":"http://proxy.example.com:8080"}'</codeblock><codeblock>cf set-running-environment-variable-group '{
"http_proxy":"http://proxy.example.com:8080",
"https_proxy":"http://proxy.example.com:8080",
"HTTP_PROXY":"http://proxy.example.com:8080",
"HTTPS_PROXY":"http://proxy.example.com:8080"}'</codeblock></li>
            <li id="create-target-org">Create and target an organization, for
              example:<codeblock>cf create-org myOrg
cf target -o myOrg</codeblock></li>
            <li id="create-space-attach-target">Create a space, attach it to your organization, and
              target it, for
                example:<codeblock>cf create-space mySpc -o myOrg
cf target -o myOrg -s mySpc</codeblock><note
                type="tip">To save time, you can add all of the commands to a shell script or batch
                file, for
              example:</note><codeblock>cf api https://api.203.0.113.0.xip.io --skip-ssl-validation
cf login
cf create-org myOrg
cf target -o myOrg
cf create-space mySpc -o myOrg
cf target -o myOrg -s mySpc</codeblock></li>
          </ol><b>To Push a GitHub Application to <keyword keyref="prodShort"/></b><ol
            id="push-github-app">
            <li><codeph>git clone</codeph> the application and ensure that the
                <codeph>manifest.yml</codeph> file in the application directory is configured
                correctly.<note>For more information, see the Cloud Foundry documentation on <xref
                  href="https://docs.cloudfoundry.org/devguide/deploy-apps/manifest.html"
                  format="html" scope="external">Deploying with Application
              Manifests</xref>.</note></li>
            <li>Target the cluster, for
              example:<codeblock>cf api https://api.203.0.113.0.xip.io</codeblock></li>
            <li>Ensure that you are logged into the cluster:<codeblock>cf login</codeblock><p>When
                prompted, enter your username (email) and password.</p></li>
            <li>Push the application:<codeblock>cf push</codeblock><p>Your application is deployed
                to the cluster. At the end of the process, Cloud Foundry displays the URL of the
                application, formatted using the xip.io wildcard DNS, for
                example:<codeblock><b>urls:</b> myAppName.203.0.113.0.xip.io</codeblock></p><note
                type="tip">You will need this URL to access the application using a web browser. You
                can also run the <codeph>cf apps</codeph> command to see detailed information about
                your application. For more information, see the Cloud Foundry documentation on <xref
                  href="https://docs.cloudfoundry.org/devguide/deploy-apps/deploy-app.html"
                  format="html" scope="external">Deploying an Application</xref>.</note><note>If you
                experience a problem, run the <codeph>cf delete
                  <varname>&lt;appName></varname></codeph> command, make the necessary adjustments,
                and then push the application again. For detailed instructions, see the Cloud
                Foundry documentation on <xref
                  href="https://docs.cloudfoundry.org/devguide/deploy-apps/troubleshoot-app-health.html"
                  format="html" scope="external">Troubleshooting Application Deployment and
                  Health</xref>.</note></li>
          </ol><xref href="hcf-on-hos-step-6.dita#concept_m3k_bth_tt">
            <image href="../../media/NextButton.png" id="image_gqc_sgp_js" placement="break"/>
          </xref></stentry>
   </strow>
  </simpletable>
 </conbody>
</concept>
